@component

public class App{

  private static final Logger LOG = LoggerFactory.getLogger(Browzwear.class);
	private static Properties prop;
	private static WebDriver driver;
	private static JavascriptExecutor js;


static {
		try {
			prop = new Properties();
			prop.load(new FileInputStream("src/main/resources/application.properties"));
			System.setProperty("webdriver.chrome.driver", "C:\\Users\\name\\GitRepos\\bw\\chromedriver.exe");
//			WebDriverManager.chromedriver().setup();
			System.setProperty(ChromeDriverService.CHROME_DRIVER_SILENT_OUTPUT_PROPERTY, "true");
			ChromeOptions options = new ChromeOptions();
			options.setHeadless(true);
			options.addArguments("user-agent=\"Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\"");
			options.setExperimentalOption("excludeSwitches", new String[] { "enable-automation" });
			options.addArguments("disable-infobars");
			options.addArguments("--disable-extensions");
			options.addArguments("--profile-directory=Default");
			options.addArguments("--incognito");
			options.addArguments("--disable-plugins-discovery");
			options.addArguments("--start-maximized");
			options.addArguments("--remote-allow-origins=*");
			options.addArguments("window-size=1980,1280");

			// use ChromeDriver to open browzwear's dashboard url
			driver = new ChromeDriver(options);
			driver.manage().window().maximize();
			driver.get(prop.getProperty("url"));
			driver.manage().timeouts().implicitlyWait(7, TimeUnit.SECONDS);

			// javascript executor
			js = (JavascriptExecutor) driver;
		}
		catch (Exception e) {
			LOG.info(e.toString());
		}
	}








private static void selectAppWithNumberOfDays(String days, String app, boolean pdf) throws InterruptedException, IOException {

		// select the calendar's dropdown arrow using xpath
		WebElement calendarDropDown = driver.findElement(By.xpath(prop.getProperty("calendar_dropdown")));
		calendarDropDown.click();
		Thread.sleep(3000);

		// select the "Last # of days" tab
		WebElement daysTab = null;
		if (days.equalsIgnoreCase("30"))
			daysTab = driver.findElement(By.xpath(prop.getProperty("last_30_days_tab")));
		else if (days.equalsIgnoreCase("180"))
			daysTab = driver.findElement(By.xpath(prop.getProperty("last_180_days_tab")));
		daysTab.click();
		Thread.sleep(5000);

		// select VStitcher/Lotta apps dropdown
		WebElement appsDropdown = driver.findElement(By.xpath(prop.getProperty("apps_dropdown")));
		appsDropdown.click();
		Thread.sleep(10000);

		// select app
		WebElement appSelected = driver.findElement(By.xpath(prop.getProperty(app)));
		appSelected.click();
		Thread.sleep(5000);

		// scroll down
		js.executeScript("window.scrollBy(0,105)");
		Thread.sleep(5000);

		// zooming out
		js.executeScript("document.body.style.zoom = '0.9'");
		Thread.sleep(3000);

		// Capture Screenshot for app with number of days and timestamp
		CapturingScreenshot.captureScreenshot(days, app, pdf);

		// zoom back in
		js.executeScript("document.body.style.zoom = '1'");
		Thread.sleep(5000);
	}





public void login() throws InterruptedException {

		try {
			CapturingScreenshot.setDriver(driver);
			Thread.sleep(8000);

			// login to BW
			browzwearLogin();

			// select the Analytics tab using its xpath
			WebElement analyticsTab = driver.findElement(By.xpath(prop.getProperty("analytics_tab")));
			analyticsTab.click();
			Thread.sleep(10000);

			// accept cookies - select and click OK(cookies) button
			WebElement cookiesOK = driver.findElement(By.xpath(prop.getProperty("cookies_ok_button")));
			cookiesOK.click();
			Thread.sleep(5000);

			// case 1: VStitcher 30 days
			selectAppWithNumberOfDays("30","vstitcher", false);

			// case 2: VStitcher 180 days
			selectAppWithNumberOfDays("180","vstitcher", false);

			// case 3: Lotta 30 days
			selectAppWithNumberOfDays("30","lotta", false);

			// case 4: Lotta 180 days
			// set pdf to true to generate report
			selectAppWithNumberOfDays("180","lotta", true);

			browzwearLogout();
		}

		catch (Exception e) {
			LOG.info("Inside catch");
			LOG.info(e.toString());
			e.printStackTrace();
		}

		finally {
			driver.quit();
		}

	}




private static void browzwearLogin() throws InterruptedException {
		// login needs to be done twice due to BW's odd behavior
		int count = 1;
		do {
			// select username field using its xpath
			String login_username_element = prop.getProperty("login_username_element");
			WebElement username = driver.findElement(By.id(prop.getProperty("login_username_element")));
			username.click();

			// enter username
			username.sendKeys(prop.getProperty("username"));
			Thread.sleep(2000);

			// select password field using its xpath
			WebElement password = driver.findElement(By.id(prop.getProperty("login_password_element")));
			password.click();

			// enter password
			password.sendKeys(prop.getProperty("password"));
			Thread.sleep(2000);

			// press enter to login
			password.sendKeys(Keys.ENTER);
			Thread.sleep(8000);

		} while (count++ < 1);

		LOG.info("Successfully logged in!");
		Thread.sleep(5000);
	}




private static void browzwearLogout() throws InterruptedException {
		// xpath of username
		WebElement userProfile = driver.findElement(By.xpath(prop.getProperty("user_profile")));
		userProfile.click();
		Thread.sleep(4000);

		// xpath of logout button
		WebElement logout = driver.findElement(By.id(prop.getProperty("logout")));
		logout.click();
		LOG.info("Successfully logged out!");
	}










}
