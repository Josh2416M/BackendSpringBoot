@Library('cop-pipeline-step') _

pipeline { agent any

parameters{
    choice(
        name: 'BRANCH_TO_BUILD',
        choices: ['main','branch1','branch2','email','upload'],
        description: 'Select the branch to build' 
        )
}

tools {
    maven "Maven 3.5.4"
}

stages {
    stage('Checkout') {
        steps {
            echo 'Checking out latest repo'
            script {
                checkout([$class: 'GitSCM', branches: [[name: "*/${BRANCH_TO_BUILD}"]], extensions: [], userRemoteConfigs: [[credentialsId: 'a.libproxy', url: 'https://github.com/org-suborg/bw.git']]])
            }
        }
    }
    stage('Setup') {
	  steps {
		echo "Set up"
    script 	{
			 withCerberus([sdbPath: 'app/library/passwords',sdbKeys: [ 'app.generic.username': 'user','app.generic.password': 'pass']]) 
			    {
				  sh "sed -i \"s/{username}/${user}/g\" ${workspace}/src/main/resources/application.properties"
				  sh "sed -i \"s/{password}/${pass}/g\" ${workspace}/src/main/resources/application.properties"
			    }
			}
		}
	}
    stage('Build') {
        steps {
            sh 'echo "Building the selected branch: ${selectedBranch}"'
            sh "sudo apt-get update -y"
            sh "sudo apt --fix-broken install -y"
            sh "sudo apt-get install -y fonts-liberation libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libgbm1 libgtk-3-0 libu2f-udev libvulkan1 libxcomposite1 libxdamage1 libxfixes3 libxkbcommon0 libxrandr2 xdg-utils"
            sh "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
            sh "sudo apt-get install -f"
            sh "sudo dpkg -i google-chrome-stable_current_amd64.deb"
            sh "Xvfb :99 & export DISPLAY=:99"
            sh "mvn clean install"
        }
	}
}
		post {
		
    success {
        echo 'This will run only if successful'
    }
    failure {
        emailext subject: "Build Failure: ${currentBuild.fullDisplayName}",
        body: "The build failed. Please check the console output for details.",
        to: "josephmanda22@gmail.com",
        attachLog: true
    }
    unstable {
        echo 'This will run only if the run was marked as unstable'
    }
    changed {
        echo 'This will run only if the state of the Pipeline has changed'
    }
}
}
